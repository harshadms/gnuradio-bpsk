options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: uhd_bpsk_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Not titled yet
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 8]
    rotation: 0
    state: enabled

blocks:
- name: Const_HDR
  id: variable_constellation
  parameters:
    comment: ''
    const_points: digital.psk_2()[0]
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    npwr: '1.0'
    precision: '8'
    rot_sym: '2'
    soft_dec_lut: '''auto'''
    sym_map: digital.psk_2()[1]
    type: calcdist
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [248, 188.0]
    rotation: 0
    state: enabled
- name: Const_PLD
  id: variable_constellation
  parameters:
    comment: ''
    const_points: digital.psk_2()[0]
    dims: '1'
    normalization: digital.constellation.AMPLITUDE_NORMALIZATION
    npwr: '1.0'
    precision: '8'
    rot_sym: '2'
    soft_dec_lut: '''auto'''
    sym_map: digital.psk_2()[1]
    type: calcdist
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [496, 188.0]
    rotation: 0
    state: enabled
- name: amp
  id: variable
  parameters:
    comment: ''
    value: '21.5'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 796.0]
    rotation: 0
    state: enabled
- name: bb_gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: BB RF Gain
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '0.1'
    stop: '10'
    value: '5'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 92.0]
    rotation: 0
    state: disabled
- name: bb_gain
  id: variable
  parameters:
    comment: ''
    value: '2.6'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 380.0]
    rotation: 0
    state: enabled
- name: dec
  id: variable_cc_decoder_def
  parameters:
    comment: ''
    dim1: '1'
    dim2: '4'
    framebits: '8000'
    k: k
    mode: fec.CC_TERMINATED
    ndim: '0'
    padding: 'False'
    polys: polys
    rate: rate
    state_end: '-1'
    state_start: '0'
    value: '"ok"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 668.0]
    rotation: 0
    state: enabled
- name: dec_hdr
  id: variable_repetition_decoder_def
  parameters:
    comment: ''
    dim1: '1'
    dim2: '1'
    framebits: hdr_format.header_nbits()
    ndim: '0'
    prob: '0.5'
    rep: rep
    value: '"ok"'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [584, 740.0]
    rotation: 0
    state: enabled
- name: eb
  id: variable
  parameters:
    comment: ''
    value: '0.6'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [632, 116.0]
    rotation: 0
    state: enabled
- name: freq
  id: variable
  parameters:
    comment: ''
    value: '915'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [408, 116.0]
    rotation: 0
    state: enabled
- name: freq_tune
  id: variable
  parameters:
    comment: ''
    value: '-900'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [264, 380.0]
    rotation: 0
    state: enabled
- name: freq_tune
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: Freq tune
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: -10e3
    step: '10'
    stop: 10e3
    value: '-6852'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1024, 92.0]
    rotation: 0
    state: disabled
- name: frf
  id: variable
  parameters:
    comment: ''
    value: eb
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 732.0]
    rotation: 0
    state: enabled
- name: gain
  id: variable_qtgui_range
  parameters:
    comment: ''
    gui_hint: ''
    label: RF Gain
    min_len: '200'
    orient: QtCore.Qt.Horizontal
    rangeType: float
    start: '0'
    step: '1'
    stop: '100'
    value: '68'
    widget: counter_slider
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [72, 324.0]
    rotation: 0
    state: disabled
- name: gain
  id: variable
  parameters:
    comment: ''
    value: '67'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 380.0]
    rotation: 0
    state: enabled
- name: hdr_format
  id: variable
  parameters:
    comment: ''
    value: digital.header_format_counter(digital.packet_utils.default_access_code,
      3, Const_PLD.bits_per_symbol())
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 300.0]
    rotation: 0
    state: enabled
- name: k
  id: variable
  parameters:
    comment: ''
    value: '7'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 108.0]
    rotation: 0
    state: enabled
- name: lb
  id: variable
  parameters:
    comment: ''
    value: 2*math.pi/sps/100
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [136, 668.0]
    rotation: 0
    state: enabled
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 116.0]
    rotation: 0
    state: enabled
- name: pfs
  id: variable
  parameters:
    comment: ''
    value: sps*2+1
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [232, 732.0]
    rotation: 0
    state: enabled
- name: polys
  id: variable
  parameters:
    comment: ''
    value: '[109, 79]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [128, 164.0]
    rotation: 0
    state: enabled
- name: rate
  id: variable
  parameters:
    comment: ''
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [48, 164.0]
    rotation: 0
    state: enabled
- name: rep
  id: variable
  parameters:
    comment: ''
    value: '3'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 796.0]
    rotation: 0
    state: enabled
- name: rx_gain
  id: variable
  parameters:
    comment: ''
    value: '31'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 796.0]
    rotation: 0
    state: enabled
- name: rx_rrc_taps
  id: variable_rrc_filter_taps
  parameters:
    alpha: eb
    comment: ''
    gain: nfilts
    ntaps: 11*sps*nfilts
    samp_rate: nfilts*samp_rate
    sym_rate: samp_rate / sps
    value: ''
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [984, 684.0]
    rotation: 0
    state: enabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '32000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 12]
    rotation: 0
    state: disabled
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: 0.5e6
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [312, 116.0]
    rotation: 0
    state: enabled
- name: sps
  id: variable
  parameters:
    comment: ''
    value: '4'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [488, 116.0]
    rotation: 0
    state: enabled
- name: blocks_message_debug_0
  id: blocks_message_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    en_uvec: 'True'
    log_level: info
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1712, 192.0]
    rotation: 0
    state: disabled
- name: digital_fll_band_edge_cc_0
  id: digital_fll_band_edge_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: pfs
    maxoutbuf: '0'
    minoutbuf: '0'
    rolloff: frf
    samps_per_sym: sps
    type: cc
    w: lb
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [744, 448.0]
    rotation: 0
    state: enabled
- name: epy_block_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, verbose=False,\
      \ addr=1):  # only default arguments here\n        \"\"\"arguments to this function\
      \ show up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n    \
      \        self,\n            name='Py Message Parser',   # will show up in GRC\n\
      \            in_sig=None,\n            out_sig=None\n        )\n        self.data_in\
      \ = \"data_in\"\n        self.cmd_in = \"cmd_in\"\n        self.addr = addr\n\
      \n        self.message_port_register_in(pmt.intern(self.cmd_in ))\n        self.message_port_register_in(pmt.intern(self.data_in\
      \ ))\n\n        self.set_msg_handler(pmt.intern(self.data_in), self.handle_data)\n\
      \        self.set_msg_handler(pmt.intern(self.cmd_in), self.handle_cmd)\n\n\
      \        self.verbose = verbose\n        # if an attribute with the same name\
      \ as a parameter is found,\n        # a callback is registered (properties work,\
      \ too).\n        self.cnt = 0\n\n    def handle_data(self, msg):\n        a\
      \ = pmt.to_python(msg)\n\n        chars = a[1]\n        addr = chars[:2]\n\n\
      \        addr = 256*addr[0]+addr[1]\n\n        if addr == self.addr:\n     \
      \       return\n        \n        string_ = []\n        for i in chars[2:]:\n\
      \            if i == 35:\n                if self.verbose:\n               \
      \     print (chars)\n                    string_.append(\"<ETX>\")\n\n     \
      \           break\n            \n            string_.append(chr(i))\n      \
      \  \n        string_ = ''.join(string_)\n\n        # if \"Testing\" in string_:\n\
      \        self.cnt = self.cnt + 1\n\n        # if not self.verbose:\n       \
      \ #     string_ = string_.split(\"<ETX>\")[0]\n        \n        print (f\"\
      Rx message from {addr}: {a[1]}\")\n    \n    def handle_cmd(self, msg):\n  \
      \      msg = pmt.to_python(msg)\n\n    def handle_cmd(self, msg):\n        msg\
      \ = pmt.to_python(msg)\n        \n        try:\n            cmd = msg[1][0]\n\
      \            test = int(msg[1][1])\n        except:\n            return\n\n\
      \        if cmd == 1:\n            print (\"Count = %d/%d\" % (self.cnt, test))\n\
      \            self.cnt = 0\n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n        pass\n"
    addr: '2'
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    verbose: 'False'
  states:
    _io_cache: ('Py Message Parser', 'blk', [('verbose', 'False'), ('addr', '1')],
      [('data_in', 'message', 1), ('cmd_in', 'message', 1)], [], 'Embedded Python
      Block example - a simple multiply const', ['addr', 'verbose'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1688, 392.0]
    rotation: 0
    state: enabled
- name: epy_block_1_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, usrp=1.0):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Add RX Time Tag',   # will show up in GRC\n   \
      \         in_sig=[np.complex64],\n            out_sig=[np.complex64]\n     \
      \   )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.usrp\
      \ = usrp\n        self.samp_time = 0\n        self.sample_count = 0\n      \
      \  self.first_sample = False\n        \n\n    def work(self, input_items, output_items):\n\
      \        \"\"\"example: multiply with constant\"\"\"\n        #time = self.usrp.get_time_now()\n\
      \        #rx_time = time.get_real_secs()\n        output_items[0][:] = input_items[0]\n\
      \        tagTuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\n \
      \       for tag in tagTuple:\n            if pmt.to_python(tag.key) == \"rx_time\"\
      :\n                self.frac_secs_samps = pmt.to_python(tag.value)[1] * 500e3\n\
      \                self.first_sample = True\n\n        if self.first_sample:\n\
      \            self.samp_time = self.samp_time - self.frac_secs_samps\n      \
      \      self.first_sample = False\n        \n        self.add_item_tag(0, self.sample_count,\
      \ pmt.intern('rx_samp_count'), pmt.to_pmt(self.samp_time))\n\t\n        self.sample_count\
      \ = self.sample_count + len(output_items[0])\n        self.samp_time = self.samp_time\
      \ + len(output_items[0])\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    usrp: '0'
  states:
    _io_cache: ('Add RX Time Tag', 'blk', [('usrp', '1.0')], [('0', 'complex', 1)],
      [('0', 'complex', 1)], 'Embedded Python Block example - a simple multiply const',
      ['usrp'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [528, 492.0]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [216, 124.0]
    rotation: 0
    state: enabled
- name: packet_rx_0
  id: packet_rx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    eb: eb
    hdr_const: Const_HDR
    hdr_dec: dec_hdr
    hdr_format: hdr_format
    maxoutbuf: '0'
    minoutbuf: '0'
    pld_const: Const_PLD
    pld_dec: dec
    psf_taps: rx_rrc_taps
    sps: sps
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1272, 368.0]
    rotation: 0
    state: enabled
- name: qtgui_freq_sink_x_0
  id: qtgui_freq_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    average: '1.0'
    axislabels: 'True'
    bw: samp_rate
    color1: '"blue"'
    color10: '"dark blue"'
    color2: '"red"'
    color3: '"green"'
    color4: '"black"'
    color5: '"cyan"'
    color6: '"magenta"'
    color7: '"yellow"'
    color8: '"dark red"'
    color9: '"dark green"'
    comment: ''
    ctrlpanel: 'False'
    fc: freq*1e6 + freq_tune
    fftsize: '1024'
    freqhalf: 'True'
    grid: 'False'
    gui_hint: ''
    label: Relative Gain
    label1: ''
    label10: ''''''
    label2: ''''''
    label3: ''''''
    label4: ''''''
    label5: ''''''
    label6: ''''''
    label7: ''''''
    label8: ''''''
    label9: ''''''
    legend: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    name: '""'
    nconnections: '1'
    norm_window: 'False'
    showports: 'False'
    tr_chan: '0'
    tr_level: '0.0'
    tr_mode: qtgui.TRIG_MODE_FREE
    tr_tag: '""'
    type: complex
    units: dB
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    wintype: window.WIN_BLACKMAN_hARRIS
    ymax: '10'
    ymin: '-140'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [536, 556.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_0
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"At RF In"'
    nconnections: '1'
    size: '5240'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0.0005'
    tr_level: '0.1'
    tr_mode: qtgui.TRIG_MODE_NORM
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [512, 372.0]
    rotation: 0
    state: disabled
- name: qtgui_time_sink_x_1
  id: qtgui_time_sink_x
  parameters:
    affinity: ''
    alias: ''
    alpha1: '1.0'
    alpha10: '1.0'
    alpha2: '1.0'
    alpha3: '1.0'
    alpha4: '1.0'
    alpha5: '1.0'
    alpha6: '1.0'
    alpha7: '1.0'
    alpha8: '1.0'
    alpha9: '1.0'
    autoscale: 'False'
    axislabels: 'True'
    color1: blue
    color10: dark blue
    color2: red
    color3: green
    color4: black
    color5: cyan
    color6: magenta
    color7: yellow
    color8: dark red
    color9: dark green
    comment: ''
    ctrlpanel: 'True'
    entags: 'True'
    grid: 'False'
    gui_hint: ''
    label1: Signal 1
    label10: Signal 10
    label2: Signal 2
    label3: Signal 3
    label4: Signal 4
    label5: Signal 5
    label6: Signal 6
    label7: Signal 7
    label8: Signal 8
    label9: Signal 9
    legend: 'True'
    marker1: '-1'
    marker10: '-1'
    marker2: '-1'
    marker3: '-1'
    marker4: '-1'
    marker5: '-1'
    marker6: '-1'
    marker7: '-1'
    marker8: '-1'
    marker9: '-1'
    name: '"Data"'
    nconnections: '1'
    size: '1024'
    srate: samp_rate
    stemplot: 'False'
    style1: '1'
    style10: '1'
    style2: '1'
    style3: '1'
    style4: '1'
    style5: '1'
    style6: '1'
    style7: '1'
    style8: '1'
    style9: '1'
    tr_chan: '0'
    tr_delay: '0.005'
    tr_level: '0.1'
    tr_mode: qtgui.TRIG_MODE_NORM
    tr_slope: qtgui.TRIG_SLOPE_POS
    tr_tag: '""'
    type: complex
    update_time: '0.10'
    width1: '1'
    width10: '1'
    width2: '1'
    width3: '1'
    width4: '1'
    width5: '1'
    width6: '1'
    width7: '1'
    width8: '1'
    width9: '1'
    ylabel: Amplitude
    ymax: '1'
    ymin: '-1'
    yunit: '""'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1672, 532.0]
    rotation: 0
    state: disabled
- name: root_raised_cosine_filter_0
  id: root_raised_cosine_filter
  parameters:
    affinity: ''
    alias: ''
    alpha: eb
    comment: ''
    decim: '1'
    gain: bb_gain
    interp: '1'
    maxoutbuf: '0'
    minoutbuf: '0'
    ntaps: 11*sps
    samp_rate: samp_rate
    sym_rate: samp_rate/sps
    type: fir_filter_ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 404.0]
    rotation: 0
    state: enabled
- name: uhd_usrp_source_0
  id: uhd_usrp_source
  parameters:
    affinity: ''
    alias: ''
    ant0: '"RX2"'
    ant1: '"RX2"'
    ant10: '"RX2"'
    ant11: '"RX2"'
    ant12: '"RX2"'
    ant13: '"RX2"'
    ant14: '"RX2"'
    ant15: '"RX2"'
    ant16: '"RX2"'
    ant17: '"RX2"'
    ant18: '"RX2"'
    ant19: '"RX2"'
    ant2: '"RX2"'
    ant20: '"RX2"'
    ant21: '"RX2"'
    ant22: '"RX2"'
    ant23: '"RX2"'
    ant24: '"RX2"'
    ant25: '"RX2"'
    ant26: '"RX2"'
    ant27: '"RX2"'
    ant28: '"RX2"'
    ant29: '"RX2"'
    ant3: '"RX2"'
    ant30: '"RX2"'
    ant31: '"RX2"'
    ant4: '"RX2"'
    ant5: '"RX2"'
    ant6: '"RX2"'
    ant7: '"RX2"'
    ant8: '"RX2"'
    ant9: '"RX2"'
    bw0: '0'
    bw1: '0'
    bw10: '0'
    bw11: '0'
    bw12: '0'
    bw13: '0'
    bw14: '0'
    bw15: '0'
    bw16: '0'
    bw17: '0'
    bw18: '0'
    bw19: '0'
    bw2: '0'
    bw20: '0'
    bw21: '0'
    bw22: '0'
    bw23: '0'
    bw24: '0'
    bw25: '0'
    bw26: '0'
    bw27: '0'
    bw28: '0'
    bw29: '0'
    bw3: '0'
    bw30: '0'
    bw31: '0'
    bw4: '0'
    bw5: '0'
    bw6: '0'
    bw7: '0'
    bw8: '0'
    bw9: '0'
    center_freq0: freq*1e6 + freq_tune
    center_freq1: '0'
    center_freq10: '0'
    center_freq11: '0'
    center_freq12: '0'
    center_freq13: '0'
    center_freq14: '0'
    center_freq15: '0'
    center_freq16: '0'
    center_freq17: '0'
    center_freq18: '0'
    center_freq19: '0'
    center_freq2: '0'
    center_freq20: '0'
    center_freq21: '0'
    center_freq22: '0'
    center_freq23: '0'
    center_freq24: '0'
    center_freq25: '0'
    center_freq26: '0'
    center_freq27: '0'
    center_freq28: '0'
    center_freq29: '0'
    center_freq3: '0'
    center_freq30: '0'
    center_freq31: '0'
    center_freq4: '0'
    center_freq5: '0'
    center_freq6: '0'
    center_freq7: '0'
    center_freq8: '0'
    center_freq9: '0'
    clock_rate: 0e0
    clock_source0: ''
    clock_source1: ''
    clock_source2: ''
    clock_source3: ''
    clock_source4: ''
    clock_source5: ''
    clock_source6: ''
    clock_source7: ''
    comment: ''
    dc_offs0: 0+0j
    dc_offs1: 0+0j
    dc_offs10: 0+0j
    dc_offs11: 0+0j
    dc_offs12: 0+0j
    dc_offs13: 0+0j
    dc_offs14: 0+0j
    dc_offs15: 0+0j
    dc_offs16: 0+0j
    dc_offs17: 0+0j
    dc_offs18: 0+0j
    dc_offs19: 0+0j
    dc_offs2: 0+0j
    dc_offs20: 0+0j
    dc_offs21: 0+0j
    dc_offs22: 0+0j
    dc_offs23: 0+0j
    dc_offs24: 0+0j
    dc_offs25: 0+0j
    dc_offs26: 0+0j
    dc_offs27: 0+0j
    dc_offs28: 0+0j
    dc_offs29: 0+0j
    dc_offs3: 0+0j
    dc_offs30: 0+0j
    dc_offs31: 0+0j
    dc_offs4: 0+0j
    dc_offs5: 0+0j
    dc_offs6: 0+0j
    dc_offs7: 0+0j
    dc_offs8: 0+0j
    dc_offs9: 0+0j
    dc_offs_enb0: default
    dc_offs_enb1: default
    dc_offs_enb10: default
    dc_offs_enb11: default
    dc_offs_enb12: default
    dc_offs_enb13: default
    dc_offs_enb14: default
    dc_offs_enb15: default
    dc_offs_enb16: default
    dc_offs_enb17: default
    dc_offs_enb18: default
    dc_offs_enb19: default
    dc_offs_enb2: default
    dc_offs_enb20: default
    dc_offs_enb21: default
    dc_offs_enb22: default
    dc_offs_enb23: default
    dc_offs_enb24: default
    dc_offs_enb25: default
    dc_offs_enb26: default
    dc_offs_enb27: default
    dc_offs_enb28: default
    dc_offs_enb29: default
    dc_offs_enb3: default
    dc_offs_enb30: default
    dc_offs_enb31: default
    dc_offs_enb4: default
    dc_offs_enb5: default
    dc_offs_enb6: default
    dc_offs_enb7: default
    dc_offs_enb8: default
    dc_offs_enb9: default
    dev_addr: '""'
    dev_args: ''
    gain0: gain
    gain1: '0'
    gain10: '0'
    gain11: '0'
    gain12: '0'
    gain13: '0'
    gain14: '0'
    gain15: '0'
    gain16: '0'
    gain17: '0'
    gain18: '0'
    gain19: '0'
    gain2: '0'
    gain20: '0'
    gain21: '0'
    gain22: '0'
    gain23: '0'
    gain24: '0'
    gain25: '0'
    gain26: '0'
    gain27: '0'
    gain28: '0'
    gain29: '0'
    gain3: '0'
    gain30: '0'
    gain31: '0'
    gain4: '0'
    gain5: '0'
    gain6: '0'
    gain7: '0'
    gain8: '0'
    gain9: '0'
    gain_type0: default
    gain_type1: default
    gain_type10: default
    gain_type11: default
    gain_type12: default
    gain_type13: default
    gain_type14: default
    gain_type15: default
    gain_type16: default
    gain_type17: default
    gain_type18: default
    gain_type19: default
    gain_type2: default
    gain_type20: default
    gain_type21: default
    gain_type22: default
    gain_type23: default
    gain_type24: default
    gain_type25: default
    gain_type26: default
    gain_type27: default
    gain_type28: default
    gain_type29: default
    gain_type3: default
    gain_type30: default
    gain_type31: default
    gain_type4: default
    gain_type5: default
    gain_type6: default
    gain_type7: default
    gain_type8: default
    gain_type9: default
    iq_imbal0: 0+0j
    iq_imbal1: 0+0j
    iq_imbal10: 0+0j
    iq_imbal11: 0+0j
    iq_imbal12: 0+0j
    iq_imbal13: 0+0j
    iq_imbal14: 0+0j
    iq_imbal15: 0+0j
    iq_imbal16: 0+0j
    iq_imbal17: 0+0j
    iq_imbal18: 0+0j
    iq_imbal19: 0+0j
    iq_imbal2: 0+0j
    iq_imbal20: 0+0j
    iq_imbal21: 0+0j
    iq_imbal22: 0+0j
    iq_imbal23: 0+0j
    iq_imbal24: 0+0j
    iq_imbal25: 0+0j
    iq_imbal26: 0+0j
    iq_imbal27: 0+0j
    iq_imbal28: 0+0j
    iq_imbal29: 0+0j
    iq_imbal3: 0+0j
    iq_imbal30: 0+0j
    iq_imbal31: 0+0j
    iq_imbal4: 0+0j
    iq_imbal5: 0+0j
    iq_imbal6: 0+0j
    iq_imbal7: 0+0j
    iq_imbal8: 0+0j
    iq_imbal9: 0+0j
    iq_imbal_enb0: default
    iq_imbal_enb1: default
    iq_imbal_enb10: default
    iq_imbal_enb11: default
    iq_imbal_enb12: default
    iq_imbal_enb13: default
    iq_imbal_enb14: default
    iq_imbal_enb15: default
    iq_imbal_enb16: default
    iq_imbal_enb17: default
    iq_imbal_enb18: default
    iq_imbal_enb19: default
    iq_imbal_enb2: default
    iq_imbal_enb20: default
    iq_imbal_enb21: default
    iq_imbal_enb22: default
    iq_imbal_enb23: default
    iq_imbal_enb24: default
    iq_imbal_enb25: default
    iq_imbal_enb26: default
    iq_imbal_enb27: default
    iq_imbal_enb28: default
    iq_imbal_enb29: default
    iq_imbal_enb3: default
    iq_imbal_enb30: default
    iq_imbal_enb31: default
    iq_imbal_enb4: default
    iq_imbal_enb5: default
    iq_imbal_enb6: default
    iq_imbal_enb7: default
    iq_imbal_enb8: default
    iq_imbal_enb9: default
    lo_export0: 'False'
    lo_export1: 'False'
    lo_export10: 'False'
    lo_export11: 'False'
    lo_export12: 'False'
    lo_export13: 'False'
    lo_export14: 'False'
    lo_export15: 'False'
    lo_export16: 'False'
    lo_export17: 'False'
    lo_export18: 'False'
    lo_export19: 'False'
    lo_export2: 'False'
    lo_export20: 'False'
    lo_export21: 'False'
    lo_export22: 'False'
    lo_export23: 'False'
    lo_export24: 'False'
    lo_export25: 'False'
    lo_export26: 'False'
    lo_export27: 'False'
    lo_export28: 'False'
    lo_export29: 'False'
    lo_export3: 'False'
    lo_export30: 'False'
    lo_export31: 'False'
    lo_export4: 'False'
    lo_export5: 'False'
    lo_export6: 'False'
    lo_export7: 'False'
    lo_export8: 'False'
    lo_export9: 'False'
    lo_source0: internal
    lo_source1: internal
    lo_source10: internal
    lo_source11: internal
    lo_source12: internal
    lo_source13: internal
    lo_source14: internal
    lo_source15: internal
    lo_source16: internal
    lo_source17: internal
    lo_source18: internal
    lo_source19: internal
    lo_source2: internal
    lo_source20: internal
    lo_source21: internal
    lo_source22: internal
    lo_source23: internal
    lo_source24: internal
    lo_source25: internal
    lo_source26: internal
    lo_source27: internal
    lo_source28: internal
    lo_source29: internal
    lo_source3: internal
    lo_source30: internal
    lo_source31: internal
    lo_source4: internal
    lo_source5: internal
    lo_source6: internal
    lo_source7: internal
    lo_source8: internal
    lo_source9: internal
    maxoutbuf: '0'
    minoutbuf: '0'
    nchan: '1'
    num_mboards: '1'
    otw: ''
    rx_agc0: Default
    rx_agc1: Default
    rx_agc10: Default
    rx_agc11: Default
    rx_agc12: Default
    rx_agc13: Default
    rx_agc14: Default
    rx_agc15: Default
    rx_agc16: Default
    rx_agc17: Default
    rx_agc18: Default
    rx_agc19: Default
    rx_agc2: Default
    rx_agc20: Default
    rx_agc21: Default
    rx_agc22: Default
    rx_agc23: Default
    rx_agc24: Default
    rx_agc25: Default
    rx_agc26: Default
    rx_agc27: Default
    rx_agc28: Default
    rx_agc29: Default
    rx_agc3: Default
    rx_agc30: Default
    rx_agc31: Default
    rx_agc4: Default
    rx_agc5: Default
    rx_agc6: Default
    rx_agc7: Default
    rx_agc8: Default
    rx_agc9: Default
    samp_rate: samp_rate
    sd_spec0: ''
    sd_spec1: ''
    sd_spec2: ''
    sd_spec3: ''
    sd_spec4: ''
    sd_spec5: ''
    sd_spec6: ''
    sd_spec7: ''
    show_lo_controls: 'False'
    start_time: '-1.0'
    stream_args: ''
    stream_chans: '[]'
    sync: pc_clock
    time_source0: ''
    time_source1: ''
    time_source2: ''
    time_source3: ''
    time_source4: ''
    time_source5: ''
    time_source6: ''
    time_source7: ''
    type: fc32
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [184, 468.0]
    rotation: 0
    state: enabled

connections:
- [digital_fll_band_edge_cc_0, '0', root_raised_cosine_filter_0, '0']
- [epy_block_1_1, '0', digital_fll_band_edge_cc_0, '0']
- [packet_rx_0, '0', qtgui_time_sink_x_1, '0']
- [packet_rx_0, pkt out, epy_block_0, data_in]
- [packet_rx_0, precrc, blocks_message_debug_0, print_pdu]
- [packet_rx_0, precrc, epy_block_0, data_in]
- [root_raised_cosine_filter_0, '0', packet_rx_0, '0']
- [uhd_usrp_source_0, '0', epy_block_1_1, '0']
- [uhd_usrp_source_0, '0', qtgui_freq_sink_x_0, '0']
- [uhd_usrp_source_0, '0', qtgui_time_sink_x_0, '0']

metadata:
  file_format: 1
  grc_version: v3.11.0.0git-551-ge2f14775
