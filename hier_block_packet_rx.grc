options:
  parameters:
    author: ''
    catch_exceptions: 'True'
    category: Packet Operators
    cmake_opt: ''
    comment: ''
    copyright: ''
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: hb
    hier_block_src_path: '.:'
    id: packet_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: prompt
    sizing_mode: fixed
    thread_safe_setters: ''
    title: ''
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 11]
    rotation: 0
    state: enabled

blocks:
- name: mark_delay
  id: variable
  parameters:
    comment: ''
    value: mark_delays[sps]
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 436.0]
    rotation: 0
    state: enabled
- name: mark_delays
  id: variable
  parameters:
    comment: "Tag Marking Delay for \nCorr Est block, indexed\nby sps.\n\nFound empirically."
    value: '[0, 0, 34, 56, 87, 119]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 500.0]
    rotation: 0
    state: enabled
- name: modulated_sync_word
  id: variable_modulate_vector
  parameters:
    comment: ''
    data: preamble
    mod: rxmod
    taps: '[1]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [208, 612.0]
    rotation: 0
    state: enabled
- name: nfilts
  id: variable
  parameters:
    comment: ''
    value: '32'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 91]
    rotation: 0
    state: enabled
- name: preamble
  id: variable
  parameters:
    comment: ''
    value: preamble_select[int(1.0/hdr_dec.rate())]
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 820.0]
    rotation: 0
    state: enabled
- name: preamble_dummy
  id: variable
  parameters:
    comment: 'use when header

      FEC is Dummy'
    value: '[0xac, 0xdd, 0xa4, 0xe2, 0xf2, 0x8c, 0x20, 0xfc]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 708.0]
    rotation: 0
    state: enabled
- name: preamble_rep
  id: variable
  parameters:
    comment: 'use when header

      FEC is Repetition (x3)'
    value: '[0xe3, 0x8f, 0xc0, 0xfc, 0x7f, 0xc7, 0xe3, 0x81, 0xc0, 0xff, 0x80, 0x38,
      0xff, 0xf0, 0x38, 0xe0, 0x0f, 0xc0, 0x03, 0x80, 0x00, 0xff, 0xff, 0xc0]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 708.0]
    rotation: 0
    state: enabled
- name: preamble_select
  id: variable
  parameters:
    comment: ''
    value: '{1: preamble_dummy, 3: preamble_rep}'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 820.0]
    rotation: 0
    state: enabled
- name: rxmod
  id: variable
  parameters:
    comment: ''
    value: digital.generic_mod(hdr_const, False, sps, True, eb, False, False)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [32, 644.0]
    rotation: 0
    state: enabled
- name: blocks_file_sink_0
  id: blocks_file_sink
  parameters:
    affinity: ''
    alias: ''
    append: 'False'
    comment: ''
    file: /tmp/payload
    type: int
    unbuffered: 'False'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1104, 804.0]
    rotation: 0
    state: disabled
- name: blocks_float_to_int_0
  id: blocks_float_to_int
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1008, 756.0]
    rotation: 0
    state: disabled
- name: blocks_float_to_short_0
  id: blocks_float_to_short
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    scale: '1'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1056, 788.0]
    rotation: 0
    state: disabled
- name: blocks_multiply_by_tag_value_cc_0
  id: blocks_multiply_by_tag_value_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tagname: '"amp_est"'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [392, 164.0]
    rotation: 0
    state: enabled
- name: blocks_tag_debug_0_0
  id: blocks_tag_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    display: 'True'
    filter: '"rx_time2"'
    name: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1944, 356.0]
    rotation: 0
    state: disabled
- name: blocks_tag_debug_0_0_0
  id: blocks_tag_debug
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    display: 'True'
    filter: '"time_est2"'
    name: ''
    num_inputs: '1'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1944, 276.0]
    rotation: 0
    state: disabled
- name: blocks_tagged_stream_multiply_length_0
  id: blocks_tagged_stream_multiply_length
  parameters:
    affinity: ''
    alias: ''
    c: pld_const.bits_per_symbol()
    comment: ''
    lengthtagname: '"payload symbols"'
    maxoutbuf: '0'
    minoutbuf: '0'
    type: float
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1352, 600.0]
    rotation: 180
    state: enabled
- name: digital_constellation_soft_decoder_cf_0
  id: digital_constellation_soft_decoder_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: pld_const
    maxoutbuf: '0'
    minoutbuf: '0'
    npwr: '-1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1440, 444.0]
    rotation: 0
    state: enabled
- name: digital_constellation_soft_decoder_cf_0_0
  id: digital_constellation_soft_decoder_cf
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: hdr_const
    maxoutbuf: '0'
    minoutbuf: '0'
    npwr: '-1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 180.0]
    rotation: 0
    state: enabled
- name: digital_corr_est_cc_0
  id: digital_corr_est_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    mark_delay: mark_delay
    maxoutbuf: '0'
    minoutbuf: '0'
    sps: sps
    symbols: modulated_sync_word
    threshold: '0.9999'
    threshold_method: digital.THRESHOLD_ABSOLUTE
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [152, 156.0]
    rotation: 0
    state: enabled
- name: digital_costas_loop_cc_0_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: hdr_const.arity()
    use_snr: 'False'
    w: 2*math.pi/sps/100
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1152, 200.0]
    rotation: 0
    state: enabled
- name: digital_costas_loop_cc_0_0_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: pld_const.arity()
    use_snr: 'False'
    w: 2*math.pi/sps/100
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 456.0]
    rotation: 0
    state: enabled
- name: digital_costas_loop_cc_0_0_0_0
  id: digital_costas_loop_cc
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    order: pld_const.arity()
    use_snr: 'False'
    w: 2*math.pi/sps/100
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 696.0]
    rotation: 0
    state: disabled
- name: digital_crc_check_0
  id: digital_crc_check
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    discard_crc: 'False'
    final_xor: '0xFFFFFFFF'
    initial_value: '0xFFFFFFFF'
    input_reflected: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
    num_bits: '32'
    poly: '0x4C11DB7'
    result_reflected: 'True'
    skip_header_bytes: '0'
    swap_endianness: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1680, 704.0]
    rotation: 0
    state: enabled
- name: digital_header_payload_demux_0
  id: digital_header_payload_demux
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    guard_interval: '0'
    header_len: (hdr_format.header_nbits() * int(1.0/hdr_dec.rate())) //  hdr_const.bits_per_symbol()
    header_padding: '0'
    items_per_symbol: '1'
    length_tag_key: '"payload symbols"'
    maxoutbuf: '0'
    minoutbuf: '0'
    output_symbols: 'True'
    samp_rate: '1'
    special_tags: '["time_est3"]'
    timing_tag_key: '"rx_time"'
    trigger_tag_key: '"time_est"'
    type: complex
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [736, 300.0]
    rotation: 0
    state: enabled
- name: digital_pfb_clock_sync_xxx_0
  id: digital_pfb_clock_sync_xxx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    filter_size: nfilts
    init_phase: nfilts/2
    loop_bw: 6.28/400.0
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    osps: '1'
    sps: sps
    taps: psf_taps
    type: ccf
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [384, 332.0]
    rotation: 0
    state: enabled
- name: digital_protocol_parser_b_0
  id: digital_protocol_parser_b
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    format: hdr_format
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [696, 492.0]
    rotation: 180
    state: enabled
- name: digital_symbol_sync_xx_0
  id: digital_symbol_sync_xx
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    constellation: digital.constellation_bpsk().base()
    damping: '1.0'
    loop_bw: '0.045'
    max_dev: '1.5'
    maxoutbuf: '0'
    minoutbuf: '0'
    nfilters: '32'
    osps: '1'
    pfb_mf_taps: psf_taps
    resamp_type: digital.IR_PFB_MF
    sps: sps
    ted_gain: '1.0'
    ted_type: digital.TED_SIGNAL_TIMES_SLOPE_ML
    type: cc
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [616, 444.0]
    rotation: 0
    state: disabled
- name: eb
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Filter Rolloff
    short_id: ''
    type: eng_float
    value: '0.35'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1408, 11]
    rotation: 0
    state: enabled
- name: epy_block_1_1
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self): \
      \ # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Add RX Time Tag',   # will show up in GRC\n   \
      \         in_sig=[np.complex64],\n            out_sig=[np.complex64]\n     \
      \   )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.sample_count\
      \ = 0\n\n    def work(self, input_items, output_items):\n        \"\"\"example:\
      \ multiply with constant\"\"\"\n        #time = self.usrp.get_time_now()\n \
      \       #rx_time = time.get_real_secs()\n        output_items[0][:] = input_items[0]\n\
      \        \n        tagTuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\
      \n        for tag in tagTuple:\n            if pmt.to_python(tag.key) == \"\
      time_est\":\n                self.add_item_tag(0, self.sample_count, pmt.intern('time_est3'),\
      \ tag.value)\n                \t\n        self.sample_count = self.sample_count\
      \ + len(output_items[0])\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Add RX Time Tag', 'blk', [], [('0', 'complex', 1)], [('0', 'complex',
      1)], 'Embedded Python Block example - a simple multiply const', [])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [432, 264.0]
    rotation: 0
    state: enabled
- name: epy_block_1_1_0_0_0_0_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, display_value=False):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Tag Dump (Unique only)',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=None\n        )\n \
      \       # if an attribute with the same name as a parameter is found,\n    \
      \    # a callback is registered (properties work, too).\n        self.tags =\
      \ []\n        self.display_value = display_value\n    \n    def work(self, input_items,\
      \ output_items):\n        \"\"\"example: multiply with constant\"\"\"\n    \
      \    \n        tagTuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\
      \n        for tag in tagTuple:\n            if pmt.to_python(tag.key) not in\
      \ self.tags:\n                self.tags.append(pmt.to_python(tag.key))\n\n \
      \               if self.display_value:\n                    print (\"Key: \"\
      \ + pmt.to_python(tag.key) + \" \" + str(tag.offset) + \" \" + str(tag.value))\n\
      \                else:\n                    print (\"Key: \" + pmt.to_python(tag.key))\n\
      \n                #rtt = self.rx_time - self.tx_time\n                #print\
      \ (f\"Rx time: {self.rx_time}\")\n                #print (f\"Tx time: {self.tx_time}\"\
      )\n                #print (f\"\\n\\nRTT: {rtt}s\")\n        return 0\n"
    affinity: ''
    alias: ''
    comment: ''
    display_value: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Tag Dump (Unique only)', 'blk', [('display_value', 'False')], [('0',
      'complex', 1)], [], 'Embedded Python Block example - a simple multiply const',
      ['display_value'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [976, 156.0]
    rotation: 0
    state: disabled
- name: epy_block_1_1_0_0_0_0_0_0_0
  id: epy_block
  parameters:
    _source_code: "\"\"\"\nEmbedded Python Blocks:\n\nEach time this file is saved,\
      \ GRC will instantiate the first class it finds\nto get ports and parameters\
      \ of your block. The arguments to __init__  will\nbe the parameters. All of\
      \ them are required to have default values!\n\"\"\"\n\nimport pmt\nimport numpy\
      \ as np\nfrom gnuradio import gr\n\n\nclass blk(gr.sync_block):  # other base\
      \ classes are basic_block, decim_block, interp_block\n    \"\"\"Embedded Python\
      \ Block example - a simple multiply const\"\"\"\n\n    def __init__(self, display_value=False):\
      \  # only default arguments here\n        \"\"\"arguments to this function show\
      \ up as parameters in GRC\"\"\"\n        gr.sync_block.__init__(\n         \
      \   self,\n            name='Tag Dump (Unique only)',   # will show up in GRC\n\
      \            in_sig=[np.complex64],\n            out_sig=[np.complex64]\n  \
      \      )\n        # if an attribute with the same name as a parameter is found,\n\
      \        # a callback is registered (properties work, too).\n        self.tags\
      \ = []\n        self.display_value = display_value\n        self.id = 0\n  \
      \  \n    def work(self, input_items, output_items):\n        \"\"\"example:\
      \ multiply with constant\"\"\"\n        output_items[0][:] = input_items[0]\n\
      \        tagTuple = self.get_tags_in_window(0, 0, len(input_items[0]))\n\n \
      \       for tag in tagTuple:\n            if not pmt.to_python(tag.key) == \"\
      rx_samp_count\": # not in self.tags:\n                self.tags.append(pmt.to_python(tag.key))\n\
      \n                if self.display_value:\n                    print (str(self.id)\
      \ + \": Key: \" + pmt.to_python(tag.key) + \" \" + str(tag.offset) + \" \" +\
      \ str(tag.value))\n                else:\n                    print (\"Key:\
      \ \" + pmt.to_python(tag.key))\n\n                #rtt = self.rx_time - self.tx_time\n\
      \                #print (f\"Rx time: {self.rx_time}\")\n                #print\
      \ (f\"Tx time: {self.tx_time}\")\n                #print (f\"\\n\\nRTT: {rtt}s\"\
      )\n        \n        self.id = self.id + 1\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    display_value: 'True'
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    _io_cache: ('Tag Dump (Unique only)', 'blk', [('display_value', 'False')], [('0',
      'complex', 1)], [('0', 'complex', 1)], 'Embedded Python Block example - a simple
      multiply const', ['display_value'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1232, 468.0]
    rotation: 0
    state: disabled
- name: fec_async_decoder_0
  id: fec_async_decoder
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decoder: pld_dec
    maxoutbuf: '0'
    minoutbuf: '0'
    mtu: 1500*8
    packed: 'True'
    rev_pack: 'False'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1432, 708.0]
    rotation: 0
    state: enabled
- name: fec_generic_decoder_0
  id: fec_generic_decoder
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    decoder: hdr_dec
    itype: float
    maxoutbuf: '0'
    minoutbuf: '0'
    otype: byte
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1584, 268.0]
    rotation: 180
    state: enabled
- name: hdr_const
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Header constellation
    short_id: ''
    type: ''
    value: digital.constellation_calcdist((digital.psk_2()[0]), (digital.psk_2()[1]),
      2, 1).base()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [544, 11]
    rotation: 0
    state: enabled
- name: hdr_dec
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Header FEC Decoder
    short_id: ''
    type: ''
    value: ' fec.dummy_decoder.make(8000)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 11]
    rotation: 0
    state: enabled
- name: hdr_format
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Header Formatter
    short_id: ''
    type: ''
    value: digital.header_format_default(digital.packet_utils.default_access_code,
      0)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [904, 11]
    rotation: 0
    state: enabled
- name: import_0
  id: import
  parameters:
    alias: ''
    comment: ''
    imports: import math
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [880, 100.0]
    rotation: 0
    state: enabled
- name: pad_sink_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: pkt out
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1928, 684.0]
    rotation: 0
    state: enabled
- name: pad_sink_1
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: precrc
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1928, 732.0]
    rotation: 0
    state: enabled
- name: pad_sink_1_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: proto_parse
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [672, 572.0]
    rotation: 0
    state: enabled
- name: pad_sink_1_0_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: payload
    num_streams: '1'
    optional: 'True'
    type: message
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1368, 820.0]
    rotation: 0
    state: enabled
- name: pad_sink_2
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: hdr_out
    num_streams: '1'
    optional: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1704, 116.0]
    rotation: 0
    state: enabled
- name: pad_sink_3
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: pld_out
    num_streams: '1'
    optional: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [968, 532.0]
    rotation: 180
    state: disabled
- name: pad_sink_3_0
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: pld_phs
    num_streams: '1'
    optional: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1824, 380.0]
    rotation: 0
    state: disabled
- name: pad_sink_5
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: timing
    num_streams: '1'
    optional: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [608, 268.0]
    rotation: 180
    state: disabled
- name: pad_sink_7
  id: pad_sink
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: corr est
    num_streams: '1'
    optional: 'True'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [240, 268.0]
    rotation: 180
    state: enabled
- name: pad_source_0
  id: pad_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    label: in
    maxoutbuf: '0'
    minoutbuf: '0'
    num_streams: '1'
    optional: 'False'
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [16, 188.0]
    rotation: 0
    state: enabled
- name: pdu_tagged_stream_to_pdu_0
  id: pdu_tagged_stream_to_pdu
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    tag: '"payload symbols"'
    type: float
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1160, 716.0]
    rotation: 0
    state: enabled
- name: pld_const
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Payload constellation
    short_id: ''
    type: ''
    value: digital.constellation_calcdist((digital.psk_2()[0]), (digital.psk_2()[1]),
      2, 1).base()
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 11]
    rotation: 0
    state: enabled
- name: pld_dec
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Payload FEC Decoder
    short_id: ''
    type: ''
    value: ' fec.dummy_decoder.make(8000)'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [368, 11]
    rotation: 0
    state: enabled
- name: psf_taps
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Pulse Shape Filter
    short_id: ''
    type: ''
    value: '[0,]'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1256, 11]
    rotation: 0
    state: enabled
- name: sps
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Samples per Symbol
    short_id: ''
    type: eng_float
    value: '2'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [1096, 11]
    rotation: 0
    state: enabled

connections:
- [blocks_float_to_int_0, '0', blocks_file_sink_0, '0']
- [blocks_float_to_short_0, '0', blocks_file_sink_0, '0']
- [blocks_multiply_by_tag_value_cc_0, '0', digital_symbol_sync_xx_0, '0']
- [blocks_multiply_by_tag_value_cc_0, '0', epy_block_1_1, '0']
- [blocks_tagged_stream_multiply_length_0, '0', blocks_float_to_int_0, '0']
- [blocks_tagged_stream_multiply_length_0, '0', blocks_float_to_short_0, '0']
- [blocks_tagged_stream_multiply_length_0, '0', pdu_tagged_stream_to_pdu_0, '0']
- [digital_constellation_soft_decoder_cf_0, '0', blocks_tagged_stream_multiply_length_0,
  '0']
- [digital_constellation_soft_decoder_cf_0_0, '0', fec_generic_decoder_0, '0']
- [digital_corr_est_cc_0, '0', blocks_multiply_by_tag_value_cc_0, '0']
- [digital_corr_est_cc_0, '1', pad_sink_7, '0']
- [digital_costas_loop_cc_0_0, '0', blocks_tag_debug_0_0, '0']
- [digital_costas_loop_cc_0_0, '0', blocks_tag_debug_0_0_0, '0']
- [digital_costas_loop_cc_0_0, '0', digital_constellation_soft_decoder_cf_0_0, '0']
- [digital_costas_loop_cc_0_0, '0', pad_sink_2, '0']
- [digital_costas_loop_cc_0_0_0, '0', digital_constellation_soft_decoder_cf_0, '0']
- [digital_costas_loop_cc_0_0_0, '0', pad_sink_3_0, '0']
- [digital_costas_loop_cc_0_0_0_0, '0', digital_header_payload_demux_0, '0']
- [digital_costas_loop_cc_0_0_0_0, '0', pad_sink_5, '0']
- [digital_crc_check_0, fail, pad_sink_1, in]
- [digital_crc_check_0, ok, pad_sink_0, in]
- [digital_header_payload_demux_0, '0', digital_costas_loop_cc_0_0, '0']
- [digital_header_payload_demux_0, '1', digital_costas_loop_cc_0_0_0, '0']
- [digital_header_payload_demux_0, '1', epy_block_1_1_0_0_0_0_0_0_0, '0']
- [digital_header_payload_demux_0, '1', pad_sink_3, '0']
- [digital_pfb_clock_sync_xxx_0, '0', digital_header_payload_demux_0, '0']
- [digital_pfb_clock_sync_xxx_0, '0', epy_block_1_1_0_0_0_0_0_0, '0']
- [digital_pfb_clock_sync_xxx_0, '0', pad_sink_5, '0']
- [digital_protocol_parser_b_0, info, digital_header_payload_demux_0, header_data]
- [digital_protocol_parser_b_0, info, pad_sink_1_0, in]
- [digital_symbol_sync_xx_0, '0', digital_costas_loop_cc_0_0_0_0, '0']
- [digital_symbol_sync_xx_0, '0', digital_header_payload_demux_0, '0']
- [digital_symbol_sync_xx_0, '0', pad_sink_5, '0']
- [epy_block_1_1, '0', digital_pfb_clock_sync_xxx_0, '0']
- [epy_block_1_1_0_0_0_0_0_0_0, '0', digital_costas_loop_cc_0_0_0, '0']
- [fec_async_decoder_0, out, digital_crc_check_0, in]
- [fec_generic_decoder_0, '0', digital_protocol_parser_b_0, '0']
- [pad_source_0, '0', digital_corr_est_cc_0, '0']
- [pdu_tagged_stream_to_pdu_0, pdus, fec_async_decoder_0, in]
- [pdu_tagged_stream_to_pdu_0, pdus, pad_sink_1_0_0, in]

metadata:
  file_format: 1
  grc_version: gfe42f6a4a
